{"ast":null,"code":"var _jsxFileName = \"/Users/sd/Documents/GitHub/virtualmarket/landing/src/pages/ComingSoon.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ComingSoon() {\n  _s();\n\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hrs: 0,\n    mins: 0,\n    secs: 0\n  });\n  setInterval(() => {\n    const targetTime = new Date('May 20, 2021').getTime();\n    const remaining = targetTime - new Date().getTime();\n    const days = Math.floor(remaining / (60 * 60 * 24 * 1000));\n    const hrs = Math.floor(remaining % (60 * 60 * 24 * 1000) / (60 * 60 * 1000));\n    const mins = Math.floor(remaining % (60 * 60 * 1000) / (60 * 1000));\n    const secs = Math.floor(remaining % (60 * 1000) / 1000);\n    setCountdown({\n      days,\n      hrs,\n      mins,\n      secs\n    });\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countdownTimer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Coming Soon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [countdown.days, \" Days\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [countdown.hrs, \" Hours\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [countdown.mins, \" Minutes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [countdown.secs, \" Seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ComingSoon, \"cvGXpX/J8zFga7G2d/9eGyNUHrM=\");\n\n_c = ComingSoon;\nexport default ComingSoon;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComingSoon\");","map":{"version":3,"sources":["/Users/sd/Documents/GitHub/virtualmarket/landing/src/pages/ComingSoon.jsx"],"names":["React","useState","ComingSoon","countdown","setCountdown","days","hrs","mins","secs","setInterval","targetTime","Date","getTime","remaining","Math","floor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;AACzCI,IAAAA,IAAI,EAAE,CADmC;AAEzCC,IAAAA,GAAG,EAAE,CAFoC;AAGzCC,IAAAA,IAAI,EAAE,CAHmC;AAIzCC,IAAAA,IAAI,EAAE;AAJmC,GAAD,CAA1C;AAOAC,EAAAA,WAAW,CAAC,MAAM;AAChB,UAAMC,UAAU,GAAG,IAAIC,IAAJ,CAAS,cAAT,EAAyBC,OAAzB,EAAnB;AACA,UAAMC,SAAS,GAAGH,UAAU,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAA/B;AAEA,UAAMP,IAAI,GAAGS,IAAI,CAACC,KAAL,CAAWF,SAAS,IAAI,KAAK,EAAL,GAAU,EAAV,GAAe,IAAnB,CAApB,CAAb;AACA,UAAMP,GAAG,GAAGQ,IAAI,CAACC,KAAL,CAAWF,SAAS,IAAI,KAAK,EAAL,GAAU,EAAV,GAAe,IAAnB,CAAT,IAAqC,KAAK,EAAL,GAAU,IAA/C,CAAX,CAAZ;AACA,UAAMN,IAAI,GAAGO,IAAI,CAACC,KAAL,CAAWF,SAAS,IAAI,KAAK,EAAL,GAAU,IAAd,CAAT,IAAgC,KAAK,IAArC,CAAX,CAAb;AACA,UAAML,IAAI,GAAGM,IAAI,CAACC,KAAL,CAAWF,SAAS,IAAI,KAAK,IAAT,CAAT,GAA0B,IAArC,CAAb;AAEAT,IAAAA,YAAY,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA;AAAnB,KAAD,CAAZ;AACD,GAVU,EAUR,IAVQ,CAAX;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,iBAAIL,SAAS,CAACE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,iBAAIF,SAAS,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,iBAAIH,SAAS,CAACI,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,iBAAIJ,SAAS,CAACK,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9BQN,U;;KAAAA,U;AAgCT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction ComingSoon() {\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hrs: 0,\n    mins: 0,\n    secs: 0\n  });\n\n  setInterval(() => {\n    const targetTime = new Date('May 20, 2021').getTime();\n    const remaining = targetTime - new Date().getTime();\n\n    const days = Math.floor(remaining / (60 * 60 * 24 * 1000));\n    const hrs = Math.floor(remaining % (60 * 60 * 24 * 1000) / (60 * 60 * 1000));\n    const mins = Math.floor(remaining % (60 * 60 * 1000) / (60 * 1000));\n    const secs = Math.floor(remaining % (60 * 1000) / 1000);\n\n    setCountdown({ days, hrs, mins, secs });\n  }, 1000);\n\n  return (\n    <div className=\"countdownTimer\">\n      <h1>Coming Soon!</h1>\n\n      <p>{countdown.days} Days</p>\n      <p>{countdown.hrs} Hours</p>\n      <p>{countdown.mins} Minutes</p>\n      <p>{countdown.secs} Seconds</p>\n    </div>\n  );\n}\n\nexport default ComingSoon;\n"]},"metadata":{},"sourceType":"module"}