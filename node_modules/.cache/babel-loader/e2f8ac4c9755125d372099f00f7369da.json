{"ast":null,"code":"var _jsxFileName = \"/Users/sd/Documents/GitHub/virtualmarket/landing/src/contexts/ProductProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react'; // import { McdPlugin } from '@makerdao/dai'; // makerdao is a library that allows for interaction with the DAI coin.\n\nimport { ethers } from 'ethers';\nimport ProductReducer from './ProductReducer';\nimport kalonCard from '../assets/product1.png';\nimport loreal from '../assets/product2.png';\nimport mystery from '../assets/product3.png';\nimport lvmh from '../assets/product4.png';\nimport kalonfeature from '../assets/kalon.png';\nimport lvmhfeature from '../assets/lvmh.png';\nimport lorealfeature from '../assets/loreal.png';\nimport randomfeature from '../assets/randomfeature.png'; // import ProductToken.sol\n// Initial Placeholder\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  products: [{\n    name: 'Kalon Tea',\n    ticker: 'KLT',\n    price: 12,\n    supply: 500,\n    // tokenInstance.getSupply()\n    available: 500,\n    // tokenInstance.getAvailability()\n    img: kalonCard,\n    tagline: 'Essence of Nature',\n    blurb: \"Nature's first green is gold, infused in a liquor that will make it truly last forever\",\n    feature: kalonfeature\n  }, {\n    name: \"L'Oréal \",\n    ticker: 'OREAL',\n    price: 20,\n    supply: 2500,\n    // etc.\n    available: 2500,\n    img: loreal,\n    tagline: \"Because you're worth it \",\n    blurb: \"Be the star that you were always meant to be, L'oreal, because you're worth it\",\n    feature: lorealfeature\n  }, {\n    name: 'Mystery Box',\n    ticker: 'RAND',\n    price: 15,\n    supply: 1000,\n    available: 1000,\n    img: mystery,\n    tagline: 'Try Me',\n    blurb: 'buy me for the chance to redeem anything in our entire catalog',\n    feature: randomfeature\n  }, {\n    name: 'LVMH',\n    ticker: 'LVMH',\n    price: 122,\n    supply: 3000,\n    available: 3000,\n    img: lvmh,\n    tagline: 'Making it Real',\n    blurb: 'A timeless first and a vibrant way to touch up both your digital and IRL identity',\n    feature: lvmhfeature\n  }]\n}; // Create Context\n\nconst ProductContext = /*#__PURE__*/createContext(initialState); // Provider Component\n\nconst ProductProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(ProductReducer, initialState); // Actions\n\n  async function tokenBuy(product) {// const a = await retrieveTokenByName(product.name);\n    // await buy(a).then((result) => {\n    //   console.log(result);\n    //   dispatch({\n    //     type: 'TOKEN_BOUGHT',\n    //     product,\n    //     result\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  async function tokenSell(product) {// const a = await retrieveTokenByName(product.name);\n    // await sell(a).then((result) => {\n    //   console.log(result);\n    //   dispatch({\n    //     type: 'TOKEN_SOLD',\n    //     product,\n    //     result\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  async function tokenRedeem(product) {// const a = await retrieveTokenByName(product.name);\n    // await tradeIn(a).then((result) => {\n    //   console.log(result);\n    //   dispatch({\n    //     type: 'TOKEN_REDEEMED',\n    //     product,\n    //     result\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  async function tokenAvailable(product) {// const a = await retrieveTokenByName(product.name);\n    // await getAvailability(a).then((available) => {\n    //   dispatch({\n    //     type: 'TOKEN_AVAILABLE',\n    //     product,\n    //     available\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  async function tokenPrice(product) {// const a = await retrieveTokenByName(product.name);\n    // await getPrice(a).then((price) => {\n    //   dispatch({\n    //     type: 'TOKEN_PRICE',\n    //     product,\n    //     price\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      products: state.products,\n      tokenAvailable,\n      tokenPrice,\n      tokenBuy,\n      tokenSell,\n      tokenRedeem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProductProvider;\nProductProvider.context = ProductContext;\nexport default ProductProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/Users/sd/Documents/GitHub/virtualmarket/landing/src/contexts/ProductProvider.jsx"],"names":["React","createContext","useReducer","ethers","ProductReducer","kalonCard","loreal","mystery","lvmh","kalonfeature","lvmhfeature","lorealfeature","randomfeature","initialState","products","name","ticker","price","supply","available","img","tagline","blurb","feature","ProductContext","ProductProvider","children","state","dispatch","tokenBuy","product","tokenSell","tokenRedeem","tokenAvailable","tokenPrice","context"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from 'react';\n// import { McdPlugin } from '@makerdao/dai'; // makerdao is a library that allows for interaction with the DAI coin.\nimport { ethers } from 'ethers';\nimport ProductReducer from './ProductReducer';\nimport kalonCard from '../assets/product1.png';\nimport loreal from '../assets/product2.png';\nimport mystery from '../assets/product3.png';\nimport lvmh from '../assets/product4.png';\nimport kalonfeature from '../assets/kalon.png';\nimport lvmhfeature from '../assets/lvmh.png';\nimport lorealfeature from '../assets/loreal.png';\nimport randomfeature from '../assets/randomfeature.png';\n\n// import ProductToken.sol\n// Initial Placeholder\nconst initialState = {\n  products: [\n    {\n      name: 'Kalon Tea',\n      ticker: 'KLT',\n      price: 12,\n      supply: 500, // tokenInstance.getSupply()\n      available: 500, // tokenInstance.getAvailability()\n      img: kalonCard,\n      tagline: 'Essence of Nature',\n      blurb: \"Nature's first green is gold, infused in a liquor that will make it truly last forever\",\n      feature: kalonfeature\n    },\n    {\n      name: \"L'Oréal \",\n      ticker: 'OREAL',\n      price: 20,\n      supply: 2500, // etc.\n      available: 2500,\n      img: loreal,\n      tagline: \"Because you're worth it \",\n      blurb: \"Be the star that you were always meant to be, L'oreal, because you're worth it\",\n      feature: lorealfeature\n    },\n    {\n      name: 'Mystery Box',\n      ticker: 'RAND',\n      price: 15,\n      supply: 1000,\n      available: 1000,\n      img: mystery,\n      tagline: 'Try Me',\n      blurb: 'buy me for the chance to redeem anything in our entire catalog',\n      feature: randomfeature\n    },\n    {\n      name: 'LVMH',\n      ticker: 'LVMH',\n      price: 122,\n      supply: 3000,\n      available: 3000,\n      img: lvmh,\n      tagline: 'Making it Real',\n      blurb: 'A timeless first and a vibrant way to touch up both your digital and IRL identity',\n      feature: lvmhfeature\n    }\n  ]\n};\n\n// Create Context\nconst ProductContext = createContext(initialState);\n\n// Provider Component\nconst ProductProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(ProductReducer, initialState);\n\n  // Actions\n  async function tokenBuy(product) {\n    // const a = await retrieveTokenByName(product.name);\n    // await buy(a).then((result) => {\n    //   console.log(result);\n    //   dispatch({\n    //     type: 'TOKEN_BOUGHT',\n    //     product,\n    //     result\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  async function tokenSell(product) {\n    // const a = await retrieveTokenByName(product.name);\n    // await sell(a).then((result) => {\n    //   console.log(result);\n    //   dispatch({\n    //     type: 'TOKEN_SOLD',\n    //     product,\n    //     result\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  async function tokenRedeem(product) {\n    // const a = await retrieveTokenByName(product.name);\n    // await tradeIn(a).then((result) => {\n    //   console.log(result);\n    //   dispatch({\n    //     type: 'TOKEN_REDEEMED',\n    //     product,\n    //     result\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  async function tokenAvailable(product) {\n    // const a = await retrieveTokenByName(product.name);\n    // await getAvailability(a).then((available) => {\n    //   dispatch({\n    //     type: 'TOKEN_AVAILABLE',\n    //     product,\n    //     available\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  async function tokenPrice(product) {\n    // const a = await retrieveTokenByName(product.name);\n    // await getPrice(a).then((price) => {\n    //   dispatch({\n    //     type: 'TOKEN_PRICE',\n    //     product,\n    //     price\n    //   });\n    // }).catch((e) => {\n    //   console.log(e);\n    // });\n  }\n\n  return (\n    <ProductContext.Provider value={{\n      products: state.products,\n      tokenAvailable,\n      tokenPrice,\n      tokenBuy,\n      tokenSell,\n      tokenRedeem\n    }}\n    >\n      {children}\n    </ProductContext.Provider>\n  );\n};\n\nProductProvider.context = ProductContext;\n\nexport default ProductProvider;\n"]},"metadata":{},"sourceType":"module"}