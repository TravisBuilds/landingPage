{"ast":null,"code":"const Web3 = require('web3');\n\nfunction save({\n  email,\n  walletAddress,\n  avatarUrl\n}) {\n  return fetch('/api/user/connectMetamask', {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      walletAddress,\n      avatarUrl\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n}\n\nconst connectWallet = async context => {\n  if (window.ethereum) {\n    window.web3 = new Web3(Web3.givenProvider || 'http://localhost:8485');\n\n    try {\n      const network = await window.web3.eth.net.getNetworkType(); // console.log('network:', network);\n\n      const account = await window.web3.eth.getAccounts();\n      console.log('account', account[0]);\n      save(account[0], '');\n      context.setWallet({\n        address: account[0]\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    console.log('need metamask');\n  }\n};\n\nexport default {\n  connectWallet,\n  save\n};","map":{"version":3,"sources":["/Users/sd/Documents/GitHub/virtualmarket/landing/src/libs/user.js"],"names":["Web3","require","save","email","walletAddress","avatarUrl","fetch","method","body","JSON","stringify","headers","then","res","json","connectWallet","context","window","ethereum","web3","givenProvider","network","eth","net","getNetworkType","account","getAccounts","console","log","setWallet","address","error"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,aAAT;AAAwBC,EAAAA;AAAxB,CAAd,EAAmD;AACjD,SAAOC,KAAK,CAAC,2BAAD,EAA8B;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,KADmB;AAEnBC,MAAAA,aAFmB;AAGnBC,MAAAA;AAHmB,KAAf,CAFkC;AAOxCM,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAP+B,GAA9B,CAAL,CAUJC,IAVI,CAUEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVV,CAAP;AAWD;;AAED,MAAMC,aAAa,GAAG,MAAOC,OAAP,IAAmB;AACvC,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACnBD,IAAAA,MAAM,CAACE,IAAP,GAAc,IAAInB,IAAJ,CAASA,IAAI,CAACoB,aAAL,IAAsB,uBAA/B,CAAd;;AACA,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMJ,MAAM,CAACE,IAAP,CAAYG,GAAZ,CAAgBC,GAAhB,CAAoBC,cAApB,EAAtB,CADE,CAEF;;AACA,YAAMC,OAAO,GAAG,MAAMR,MAAM,CAACE,IAAP,CAAYG,GAAZ,CAAgBI,WAAhB,EAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAO,CAAC,CAAD,CAA9B;AAEAvB,MAAAA,IAAI,CAACuB,OAAO,CAAC,CAAD,CAAR,EAAa,EAAb,CAAJ;AACAT,MAAAA,OAAO,CAACa,SAAR,CAAkB;AAAEC,QAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD;AAAlB,OAAlB;AACD,KARD,CAQE,OAAOM,KAAP,EAAc;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF,GAbD,MAaO;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF,CAjBD;;AAmBA,eAAe;AACbb,EAAAA,aADa;AAEbb,EAAAA;AAFa,CAAf","sourcesContent":["const Web3 = require('web3');\n\nfunction save({ email, walletAddress, avatarUrl }) {\n  return fetch('/api/user/connectMetamask', {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      walletAddress,\n      avatarUrl\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then((res) => res.json());\n}\n\nconst connectWallet = async (context) => {\n  if (window.ethereum) {\n    window.web3 = new Web3(Web3.givenProvider || 'http://localhost:8485');\n    try {\n      const network = await window.web3.eth.net.getNetworkType();\n      // console.log('network:', network);\n      const account = await window.web3.eth.getAccounts();\n      console.log('account', account[0]);\n\n      save(account[0], '');\n      context.setWallet({ address: account[0] });\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    console.log('need metamask');\n  }\n};\n\nexport default {\n  connectWallet,\n  save\n};\n"]},"metadata":{},"sourceType":"module"}