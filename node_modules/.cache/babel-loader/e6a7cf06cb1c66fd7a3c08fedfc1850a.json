{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\nexport default function useInjectedWeb3() {\n  _s();\n\n  const {\n    setSelectedEthAddr,\n    setInjectedProvider\n  } = useContext(StoreProvider.context);\n  let provider;\n  useEffect(() => {\n    const windowProvider = async () => {\n      if (typeof window.ethereum !== 'undefined' || typeof window.web3 !== 'undefined') {\n        provider = window.ethereum || window.web3.currentProvider;\n\n        try {\n          await provider.enable();\n        } catch (e) {\n          console.error('user refused to connect');\n        } // console.log('network:', provider.networkVersion);\n        // console.log('selectedAddress:', provider.selectedAddress);\n        // console.log('is metamask:', provider.isMetaMask);\n\n\n        setInjectedProvider(provider);\n        provider.on('accountsChanged', accounts => {\n          console.log('accounts changed');\n          setSelectedEthAddr(accounts[0]);\n        });\n        provider.on('networkChanged', accounts => {\n          console.log('networkChanged changed');\n          console.log(accounts);\n        });\n      }\n    };\n\n    windowProvider();\n  }, [window.ethereum]);\n  return provider;\n}\n\n_s(useInjectedWeb3, \"PL9IhhwhmIFM3VWiZzBPo7nCK8c=\");","map":{"version":3,"sources":["/Users/traviswu/Desktop/landing/src/components/Hooks/useInjectedWeb3.js"],"names":["useContext","useEffect","StoreProvider","useInjectedWeb3","setSelectedEthAddr","setInjectedProvider","context","provider","windowProvider","window","ethereum","web3","currentProvider","enable","e","console","error","on","accounts","log"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAA8CL,UAAU,CAACE,aAAa,CAACI,OAAf,CAA9D;AAEA,MAAIC,QAAJ;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,cAAc,GAAG,YAAY;AACjC,UAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA3B,IACM,OAAOD,MAAM,CAACE,IAAd,KAAuB,WADjC,EAC+C;AAC7CJ,QAAAA,QAAQ,GAAGE,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACE,IAAP,CAAYC,eAA1C;;AAEA,YAAI;AACF,gBAAML,QAAQ,CAACM,MAAT,EAAN;AACD,SAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd;AACD,SAP4C,CAQ7C;AACA;AACA;;;AAEAX,QAAAA,mBAAmB,CAACE,QAAD,CAAnB;AAEAA,QAAAA,QAAQ,CAACU,EAAT,CAAY,iBAAZ,EAAgCC,QAAD,IAAc;AAC3CH,UAAAA,OAAO,CAACI,GAAR,CAAY,kBAAZ;AAEAf,UAAAA,kBAAkB,CAACc,QAAQ,CAAC,CAAD,CAAT,CAAlB;AACD,SAJD;AAMAX,QAAAA,QAAQ,CAACU,EAAT,CAAY,gBAAZ,EAA+BC,QAAD,IAAc;AAC1CH,UAAAA,OAAO,CAACI,GAAR,CAAY,wBAAZ;AACAJ,UAAAA,OAAO,CAACI,GAAR,CAAYD,QAAZ;AACD,SAHD;AAID;AACF,KA3BD;;AA6BAV,IAAAA,cAAc;AACf,GA/BQ,EA+BN,CAACC,MAAM,CAACC,QAAR,CA/BM,CAAT;AAiCA,SAAOH,QAAP;AACD;;GAvCuBJ,e","sourcesContent":["import { useContext, useEffect } from 'react';\nimport StoreProvider from '../../contexts/StoreProvider';\n\nexport default function useInjectedWeb3() {\n  const { setSelectedEthAddr, setInjectedProvider } = useContext(StoreProvider.context);\n\n  let provider;\n\n  useEffect(() => {\n    const windowProvider = async () => {\n      if (typeof window.ethereum !== 'undefined'\n            || (typeof window.web3 !== 'undefined')) {\n        provider = window.ethereum || window.web3.currentProvider;\n\n        try {\n          await provider.enable();\n        } catch (e) {\n          console.error('user refused to connect');\n        }\n        // console.log('network:', provider.networkVersion);\n        // console.log('selectedAddress:', provider.selectedAddress);\n        // console.log('is metamask:', provider.isMetaMask);\n\n        setInjectedProvider(provider);\n\n        provider.on('accountsChanged', (accounts) => {\n          console.log('accounts changed');\n\n          setSelectedEthAddr(accounts[0]);\n        });\n\n        provider.on('networkChanged', (accounts) => {\n          console.log('networkChanged changed');\n          console.log(accounts);\n        });\n      }\n    };\n\n    windowProvider();\n  }, [window.ethereum]);\n\n  return provider;\n}\n"]},"metadata":{},"sourceType":"module"}